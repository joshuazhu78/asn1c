////////////////////// modulerecursion.proto //////////////////////
// Protobuf generated from /43-recursion-OK.asn1 by asn1c-0.9.29
// ModuleRecursion { iso org(3) dod(6) internet(1) private(4) enterprise(1) spelio(9363) software(1) asn1c(5) test(1) 43 }

syntax = "proto3";

package pkg43_recursion_ok_asn1.v1;
option go_package = "pkg43_recursion_ok_asn1/v1/modulerecursion";

import "validate/v1/validate.proto";
import "asn1/v1/asn1.proto";

// sequence from 43-recursion-OK.asn1:15
// {Test-structure-1}
message Teststructure1 {
    int32 t_member1 = 1 [ json_name="t-member1"];
    // @inject_tag: aper:""
    repeated Teststructure1 t_member2 = 2 [ json_name="t-member2"];
    // @inject_tag: aper:"optional,"
    optional Teststructure1 t_member3 = 3 [ json_name="t-member3"];
    int32 t_member4 = 4 [ json_name="t-member4"];
};

// sequence from 43-recursion-OK.asn1:22
// {Choice-1}
message Choice1 {
    // choice from 43-recursion-OK.asn1:22
    oneof choice_1 {
        // @inject_tag: aper:"choiceIdx:1,"
        Choice1 and = 1 [ json_name="and"];
        // @inject_tag: aper:"choiceIdx:2,"
        int32 or = 2 [ json_name="or"];
        // @inject_tag: aper:"choiceIdx:3,"
        Choice1 not = 3 [ json_name="not"];
        // @inject_tag: aper:"choiceIdx:4,"
        int32 other = 4 [ json_name="other"];
    }
};

// range of Integer from 43-recursion-OK.asn1:28
// {Test-structure-2}
message Teststructure2 {
    int32 value = 1 [ json_name="value"];
};

// range of Integer from 43-recursion-OK.asn1:29
// {Test-structure-3}
message Teststructure3 {
    int32 value = 1 [ json_name="value"];
};

