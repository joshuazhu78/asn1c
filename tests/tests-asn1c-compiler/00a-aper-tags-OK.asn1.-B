////////////////////// moduletestconstraints1.proto //////////////////////
// Protobuf generated from /00a-aper-tags-OK.asn1 by asn1c-0.9.29
// ModuleTestConstraints1 { iso org(3) dod(6) internet(1) private(4) enterprise(1) spelio(9363) software(1) asn1c(5) test(1) 0 }

syntax = "proto3";

package pkg00a_aper_tags_ok.v1;
option go_package = "pkg00a_aper_tags_ok/v1/moduletestconstraints1;moduletestconstraints1";

import "validate/v1/validate.proto";
import "asn1/v1/asn1.proto";

// sequence from 00a-aper-tags-OK.asn1:15
// @inject_tag: aper:"valueExt"
// {Some-List}
message SomeList {
    // @inject_tag: aper:"optional,sizeLB:1,sizeUB:123456,"
    repeated ConstrainedString element_list = 1 [(validate.v1.rules).repeated = {min_items: 1, max_items: 123456}, json_name="element-List"];
};

// range of Integer from 00a-aper-tags-OK.asn1:19
// {Some-ID}
message SomeID {
    // @inject_tag: aper:"sizeLB:22,sizeUB:32,"
    asn1.v1.BitString value = 1 [ json_name="value"];
};

// range of Integer from 00a-aper-tags-OK.asn1:21
// {Some-Identity}
message SomeIdentity {
    // @inject_tag: aper:"sizeLB:4,sizeUB:4,"
    bytes value = 1 [(validate.v1.rules).bytes = {min_len: 4, max_len: 4}, json_name="value"];
};

// range of Integer from 00a-aper-tags-OK.asn1:23
// {ConstrainedString}
message ConstrainedString {
    // @inject_tag: aper:"sizeExt,sizeLB:1,sizeUB:150,"
    string value = 1 [(validate.v1.rules).string = {min_len: 1, max_len: 150}, json_name="value"];
};

// constant Integer from 00a-aper-tags-OK.asn1:25
// {-}
message Int123456 {
    // @inject_tag: aper:"valueLB:123456,valueUB:123456,"
    int32 value = 1 [(validate.v1.rules).int32.const = 123456, json_name="value"];
};

// range of Integer from 00a-aper-tags-OK.asn1:27
// {Interval}
message Interval {
    // @inject_tag: aper:"valueLB:-100,valueUB:123456,"
    int32 value = 1 [(validate.v1.rules).int32 = {gte: -100, lte: 123456}, json_name="value"];
};

// range of Integer from 00a-aper-tags-OK.asn1:29
// {LongerInterval}
message LongerInterval {
    // @inject_tag: aper:"valueLB:-55,valueUB:68719476735,"
    int64 value = 1 [(validate.v1.rules).int64 = {gte: -55, lte: 68719476735}, json_name="value"];
};

