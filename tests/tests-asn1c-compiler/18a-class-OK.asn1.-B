////////////////////// moduletestclass.proto //////////////////////
// Protobuf generated from /18a-class-OK.asn1 by asn1c-0.9.29
// ModuleTestClass { iso org(3) dod(6) internet(1) private(4) enterprise(1) spelio(9363) software(1) asn1c(5) test(1) 18 }

syntax = "proto3";

package pkg18a_class_ok.v1;
option go_package = "pkg18a_class_ok/v1/moduletestclass;moduletestclass";

import "validate/v1/validate.proto";
import "asn1/v1/asn1.proto";

// concrete instance(s) of class FUNCTION from 18a-class-OK.asn1:29
// {_Functions}
message Functions {
// {Functions001}
    message Functions001 {
        int32 code = 1 [(validate.v1.rules).int32.const = 1, json_name="&code"];
        Pair arg_type = 2 [ json_name="&ArgType"];
        int32 result_type = 3 [ json_name="&ResultType"];
    };

// {Functions002}
    message Functions002 {
        int32 code = 1 [(validate.v1.rules).int32.const = 2, json_name="&code"];
        int32 arg_type = 2 [ json_name="&ArgType"];
        int32 result_type = 3 [ json_name="&ResultType"];
    };

    Functions001 instance001 = 1 [ json_name="instance001"];
    Functions002 instance002 = 2 [ json_name="instance002"];
    Operatorroot operator_root = 3 [ json_name="operator_root"];
};

// sequence from 18a-class-OK.asn1:33
// {Pair}
message Pair {
    int32 a = 1 [ json_name="a"];
    int32 b = 2 [ json_name="b"];
};

// concrete instance(s) of class FUNCTION from 18a-class-OK.asn1:36
// {operator-plus}
message Operatorplus {
    // @inject_tag: aper:"unique,"
    int32 code = 1 [(validate.v1.rules).int32.const = 1, json_name="&code"];
    Pair arg_type = 2 [ json_name="&ArgType"];
    // @inject_tag: aper:"optional,"
    int32 unused = 3 [ json_name="&Unused"];
    int32 result_type = 4 [ json_name="&ResultType"];
};

// concrete instance(s) of class FUNCTION from 18a-class-OK.asn1:43
// {operator-square}
message Operatorsquare {
    // @inject_tag: aper:"unique,"
    int32 code = 1 [(validate.v1.rules).int32.const = 2, json_name="&code"];
    int32 arg_type = 2 [ json_name="&ArgType"];
    // @inject_tag: aper:"optional,"
    int32 unused = 3 [ json_name="&Unused"];
    int32 result_type = 4 [ json_name="&ResultType"];
};

// concrete instance(s) of class FUNCTION from 18a-class-OK.asn1:50
// {operator-root}
message Operatorroot {
    // @inject_tag: aper:"unique,"
    int32 code = 1 [(validate.v1.rules).int32.const = 3, json_name="&code"];
    int32 arg_type = 2 [ json_name="&ArgType"];
    // @inject_tag: aper:"optional,"
    int32 unused = 3 [ json_name="&Unused"];
    float result_type = 4 [ json_name="&ResultType"];
};

// concrete instance(s) of class FUNCTION from 18a-class-OK.asn1:57
// {operator-root2}
message Operatorroot2 {
    // @inject_tag: aper:"unique,"
    int32 code = 1 [(validate.v1.rules).int32.const = 4, json_name="&code"];
    int32 arg_type = 2 [ json_name="&ArgType"];
    // @inject_tag: aper:"optional,"
    int32 unused = 3 [ json_name="&Unused"];
    float result_type = 4 [ json_name="&ResultType"];
};

